'use strict';
import _ from 'lodash';
import * as utils from './../utils';
import Bluebird from 'bluebird';
export default function(Model, notify, updateCb) {
    let updateHook = Bluebird.method((u, request, by) =>
        _.isFunction(updateCb) ? updateCb(u, request, by) : u[updateCb](request, by)
    );
    return function(request, reply) {
        updateHook(request.pre[Model.collection], request, utils.by(request))
            .then(u => u.save())
            .then(u => {
                if (notify.emit) {
                    notify.emit('invoked', u, request);
                }
                reply(u);
            })
            .catch((err) => {
                utils.logAndBoom(err, reply);
            });
    };
}
