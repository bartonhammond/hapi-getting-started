'use strict';
import {assign} from 'lodash';
import {org} from './../common/utils';
import {build} from './../common/dao';
import schemas from './schemas';
class UserGroups {
    constructor(attrs) {
        assign(this, attrs);
        Object.defineProperty(this, 'audit', {
            writable: true,
            enumerable: false
        });
    }
    static newObject(doc, by) {
        return UserGroups.create(doc.payload.name,
            org(doc),
            doc.payload.description,
            by)
            .then((userGroup) => {
                return userGroup
                    .addMembers(doc.payload.members, by)
                    .addOwners(doc.payload.owners, by)
                    .setAccess(doc.payload.access, by)
                    .save();
            });
    }
    static create(name, organisation, description, owner) {
        let document = {
            name,
            organisation,
            description,
            members: [owner],
            owners: [owner],
            needsApproval: [],
            access: 'restricted'
        };
        return UserGroups.insertAndAudit(document, owner);
    }
}
build(UserGroups, schemas.dao, schemas.model, [], 'name');
export default UserGroups;
