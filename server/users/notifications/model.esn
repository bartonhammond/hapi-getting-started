'use strict';
import * as DAO from './../../common/dao';
import schemas from './schemas';
import _ from 'lodash';
import Bluebird from 'bluebird';
class Notifications {
    constructor(attrs) {
        _.assign(this, attrs);
        Object.defineProperty(this, 'audit', {
            writable: true,
            enumerable: false
        });
    }
    static createOne (email, organisation, objectType, objectId, title, state, action, priority, content, by) {
        let document = {
            email,
            organisation,
            objectType,
            objectId,
            title,
            state,
            action,
            priority,
            content,
            isActive: true,
            createdBy: by,
            createdOn: new Date(),
            updatedBy: by,
            updatedOn: new Date()
        };
        return Notifications.upsert(document);
    }
    static createMany(email, organisation, objectType, objectId, title, state, action, priority, content, by) {
        return Bluebird.all(_.unique(_.flatten(email)).map((e) =>
                Notifications.createOne(e, organisation, objectType, objectId, title, state, action, priority, content, by))
        );
    }
    static create(email, organisation, objectType, objectId, title, state, action, priority, content, by) {
        if (_.isArray(email)) {
            return Notifications.createMany(email, organisation, objectType, objectId, title, state, action, priority, content, by);
        } else {
            return Notifications.createOne(email, organisation, objectType, objectId, title, state, action, priority, content, by);
        }
    }
}
DAO.build(Notifications, schemas.dao, schemas.model);
export default Notifications;
